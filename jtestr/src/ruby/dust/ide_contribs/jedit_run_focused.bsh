/*
 * Dust_Run_Focusted_Test.bsh v1.0 - a BeanShell macro script for the
 * jEdit text editor - Runs the Ruby Testcase (Dust style) the cursor is currently in.
 */
import java.util.regex.*;

void execTest(path, args)
{
	runInSystemShell(view, "ruby " + path + " --name " + args);
}

String find_current_method(){
  curpos= textArea.getCaretPosition();
  txt= textArea.getText();
  off= txt.lastIndexOf(" test ", curpos); //(.*)(def[ ]+)(\\w+.*)
  if(off != -1){
    lo= textArea.getLineOfOffset(off);
    eol= textArea.getLineEndOffset(lo);
    bol = textArea.getLineStartOffset(lo);
    
    line = txt.substring(bol, eol);
    regex = "^\\s*test\\s+[\"'](.*?)[\"']\\s+do\\s*$";
    Pattern pattern = Pattern.compile(regex);
    Matcher matcher = pattern.matcher(line);
    matcher.matches();
    return "test_" + matcher.group(1).replaceAll(" ", "_");
  }
  
  return null;
}

void runScript()
{
	if(buffer.isNewFile())
		buffer.saveAs(view, true);
	else
		buffer.save(view, buffer.getPath());
	mode = buffer.getMode().getName();
	path = buffer.getPath() + " ";
	os = System.getProperty("os.name");
	if(os.indexOf("Windows") != -1)
		path = "\"" + path + "\"";
	if(!mode.equals("ruby")) {
		Macros.error(view, "The current file does not appear to be a ruby file.");
		return;
	}
	
	// find the method we are in
	meth= find_current_method();
	
	if(meth == null || !meth.startsWith("test_")){
		Macros.error(view, "The current method file does not appear to be a dust testcase.");
		return;
	}

	execTest(path, meth);
}

runScript();


/*

Macro index data (in DocBook format)

  <listitem>
    <para><filename>Dust_Run_Focused_Test.bsh</filename></para>
    <abstract><para>
      Runs current Ruby testcase (Dust style)
    </para></abstract>
  </listitem>

*/

// end Dust_Run_Focused_Test.bsh
